{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1001 Capstone Code- Sommeliers","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uBNZyyOgDTMX","executionInfo":{"status":"ok","timestamp":1640052717889,"user_tz":300,"elapsed":731,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"1d18e6f6-0e53-4a7c-db36-4ba181fc53ff"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive/')"]},{"cell_type":"code","source":["cd drive/MyDrive/dsga1001_capstoneProject_Sommeliers/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CK2Y8CwDEGf8","executionInfo":{"status":"ok","timestamp":1640052717889,"user_tz":300,"elapsed":2,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"806fee06-6863-45a3-c73d-baed710eb1c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[Errno 2] No such file or directory: 'drive/MyDrive/dsga1001_capstoneProject_Sommeliers/'\n","/content/drive/MyDrive/dsga1001_capstoneProject_Sommeliers\n"]}]},{"cell_type":"markdown","source":["Imports:"],"metadata":{"id":"2aEsLEj7FWxv"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import scipy.stats as stats\n","from sklearn.model_selection import train_test_split as tts\n","from sklearn.linear_model import LogisticRegression as LogR\n","import matplotlib.pyplot as plt"],"metadata":{"id":"bdDu2lvJFZIh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Data: White and Red Wine"],"metadata":{"id":"mIK4A5n1EVQs"}},{"cell_type":"code","source":["white = pd.read_csv(\"winequality-white.csv\")\n","red = pd.read_csv(\"winequality-red.csv\")"],"metadata":{"id":"GGXSggUpFVKO","executionInfo":{"status":"ok","timestamp":1640053084945,"user_tz":300,"elapsed":124,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}}},"execution_count":25,"outputs":[]},{"cell_type":"markdown","source":["Our Significance Level: Alpha=.001"],"metadata":{"id":"LpWaawqNs2lL"}},{"cell_type":"code","source":["alpha = .001"],"metadata":{"id":"6guiz_dYs9aZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Question 1: Are the wine types significantly different?\n","\n","\n","\n","Method = Hypothesis Testing\n","\n"],"metadata":{"id":"Qyy24qAkEc1C"}},{"cell_type":"markdown","source":["\n","\n","\n","*   Is there a difference between white and red wine quality distributions? \n","  *   KS\n","*   Is there a significant difference between white and red wine quality scores? What about other attributes?\n","  *   MWU repeated\n"],"metadata":{"id":"jf8bB4GyEiXN"}},{"cell_type":"code","source":["#KS Test and Histogram showing distribution difference\n","\n","plt.hist(white[\"quality\"], bins=6, alpha=0.5, density=True,label=\"White Wine\",histtype='step')\n","plt.hist(red[\"quality\"], bins=6, alpha=0.5, color='red', density=True, label=\"Red Wine\",histtype='step')\n","plt.title(\"White vs. Red Wine Quality\")\n","plt.legend()\n","plt.show()\n","plt.hist(white[\"quality\"], bins=6, alpha=0.5, label=\"White Wine\",density=True,cumulative=True,histtype='step')\n","plt.hist(red[\"quality\"], bins=6, alpha=0.5, color='red', label=\"Red Wine\",density=True,cumulative=True,histtype='step')\n","plt.title(\"White vs. Red Wine Quality CMFs\")\n","plt.legend(loc=2)\n","plt.show()\n","\n","if stats.ks_2samp(white[\"quality\"], red[\"quality\"])[1] < alpha:\n","    print(\"The p-value is\",stats.ks_2samp(white[\"quality\"],red[\"quality\"])[1],\".\", \"Therefore, we can reject the null hypothesis that they have the same distribution.\")\n","else:\n","    print(\"The p-value is\",stats.ks_2samp(white[\"quality\"], red[\"quality\"])[1],\".\", \"Therefore, we can't reject the null hypothesis that they have the same distribution.\")"],"metadata":{"id":"Jto8XwEFFT9N","colab":{"base_uri":"https://localhost:8080/","height":563},"executionInfo":{"status":"ok","timestamp":1640052718759,"user_tz":300,"elapsed":741,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"227e5b76-77cf-4354-d823-9887a25e2a96"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["The p-value is 1.0 . Therefore, we can't reject the null hypothesis that they have the same distribution.\n"]}]},{"cell_type":"code","source":["#Mann Whitney U test repeated for each attribute\n","for att in white.columns:\n","  test = stats.mannwhitneyu(white[att],red[att])\n","  if test[1] < alpha:\n","    print(\"The\",att,\"value is significantly different between white and red wine\")\n","  else:\n","    print(\"We fail to say that there is a significant difference between white and red wine for\", att)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tof6eJwxM2Ks","executionInfo":{"status":"ok","timestamp":1640052718760,"user_tz":300,"elapsed":3,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"2954b0c8-b919-4071-f0d1-be422b45ef86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The fixed acidity value is significantly different between white and red wine\n","The volatile acidity value is significantly different between white and red wine\n","The citric acid value is significantly different between white and red wine\n","The residual sugar value is significantly different between white and red wine\n","The chlorides value is significantly different between white and red wine\n","The free sulfur dioxide value is significantly different between white and red wine\n","The total sulfur dioxide value is significantly different between white and red wine\n","The density value is significantly different between white and red wine\n","The pH value is significantly different between white and red wine\n","The sulphates value is significantly different between white and red wine\n","We fail to say that there is a significant difference between white and red wine for alcohol\n","The quality value is significantly different between white and red wine\n"]}]},{"cell_type":"markdown","source":["# Question 2: Do taste-affecting attributes have a significant difference in quality for higher vs. lower values?\n","\n","Method = Hypothesis Testing"],"metadata":{"id":"06k91cu_F2Mx"}},{"cell_type":"markdown","source":["\n","\n","*   **IF THERE IS A SIGNIFICANT DIFFERENCE BETWEEN WHITE AND RED WINE QUALITIES AND DISTRIBUTIONS, DO BELOW TESTS SEPARATE FOR EACH WINE TYPE**\n","*   Do higher alcoholic drinks have higher quality ratings than less? \n","  *   Use median-split based on alcohol content\n","  *   Use MWU Test\n","  *   Repeat for citric acid, volatile acidity, residual sugar, chlorides, sulphates\n","    *   These are the taste-affecting attributes\n","\n","\n"],"metadata":{"id":"pUwf1h6WGNM9"}},{"cell_type":"markdown","source":["From the results of Q1, there is a significant difference at least for most attributes of the wine (not alcohol). Though the distribution is reported to fail to reject that they are the same, we will only consider the datasets separately due to the significant attribute differences found."],"metadata":{"id":"wjZVFpDIsB4D"}},{"cell_type":"code","source":["taste_att = [\"alcohol\",\"citric acid\", \"volatile acidity\", \"residual sugar\", \"chlorides\", \"sulphates\"]\n","\n","def median_split(data, att): #Does median split for a given attribute and returns 2 dataframes with attribute and \"quality\" as the two columns\n","  med = int(len(data)/2)\n","\n","  srt_df = data[[att,\"quality\"]].sort_values(att)\n","  \n","  return srt_df.iloc[:med], srt_df.iloc[med:]\n","\n","#for white wine\n","print(\"For white wine:\")\n","print(\"====================================================================================================================\")\n","for att in taste_att:\n","  test = stats.mannwhitneyu(median_split(white, att)[0]['quality'],median_split(white, att)[1]['quality'])\n","  print(\"For \" + att +\":\")\n","  if test[1] > alpha:  #defined in one of the first code cells\n","    print(\"No significant difference in quality scores between drinks with higher vs. lower\",att, \"scores\")\n","  else:\n","    if median_split(white, att)[0]['quality'].mean()>median_split(white, att)[1]['quality'].mean(): #using mean since median isn't discrete enough always to check which side of the median has greater values\n","      print(\"From the data, lower\",att,\"values seem to correspond to a signficantly higher quality than higher\",att,\"values\")\n","    else:\n","      print(\"From the data, higher\",att,\"values seem to correspond to a signficantly higher quality than lower\",att,\"values\")\n","  print()\n","print(\"====================================================================================================================\")\n","print()\n","print()\n","\n","\n","#for red wine\n","print(\"For red wine:\")\n","print(\"====================================================================================================================\")\n","for att in taste_att:\n","  test = stats.mannwhitneyu(median_split(red, att)[0]['quality'],median_split(red, att)[1]['quality'])\n","  print(\"For \" + att +\":\")\n","  if test[1] > alpha:\n","    print(\"No significant difference in quality scores between drinks with higher vs. lower\",att, \"scores\")\n","  else:\n","    if median_split(red, att)[0]['quality'].mean()>median_split(red, att)[1]['quality'].mean(): #using mean since median isn't discrete enough always to check which side of the median has greater values\n","      print(\"From the data, lower\",att,\"values seem to correspond to a signficantly higher quality than higher\",att,\"values\")\n","    else:\n","      print(\"From the data, higher\",att,\"values seem to correspond to a signficantly higher quality than lower\",att,\"values\")\n","  print()\n","print(\"====================================================================================================================\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JL3t5KxXG7ii","executionInfo":{"status":"ok","timestamp":1640052719013,"user_tz":300,"elapsed":255,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"91561ca5-0f69-4c01-e641-c31582fddb45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["For white wine:\n","====================================================================================================================\n","For alcohol:\n","From the data, higher alcohol values seem to correspond to a signficantly higher quality than lower alcohol values\n","\n","For citric acid:\n","No significant difference in quality scores between drinks with higher vs. lower citric acid scores\n","\n","For volatile acidity:\n","From the data, lower volatile acidity values seem to correspond to a signficantly higher quality than higher volatile acidity values\n","\n","For residual sugar:\n","From the data, lower residual sugar values seem to correspond to a signficantly higher quality than higher residual sugar values\n","\n","For chlorides:\n","From the data, lower chlorides values seem to correspond to a signficantly higher quality than higher chlorides values\n","\n","For sulphates:\n","No significant difference in quality scores between drinks with higher vs. lower sulphates scores\n","\n","====================================================================================================================\n","\n","\n","For red wine:\n","====================================================================================================================\n","For alcohol:\n","From the data, higher alcohol values seem to correspond to a signficantly higher quality than lower alcohol values\n","\n","For citric acid:\n","From the data, higher citric acid values seem to correspond to a signficantly higher quality than lower citric acid values\n","\n","For volatile acidity:\n","From the data, lower volatile acidity values seem to correspond to a signficantly higher quality than higher volatile acidity values\n","\n","For residual sugar:\n","No significant difference in quality scores between drinks with higher vs. lower residual sugar scores\n","\n","For chlorides:\n","From the data, lower chlorides values seem to correspond to a signficantly higher quality than higher chlorides values\n","\n","For sulphates:\n","From the data, higher sulphates values seem to correspond to a signficantly higher quality than lower sulphates values\n","\n","====================================================================================================================\n"]}]},{"cell_type":"markdown","source":["# Question 3: Can we predict the wine type given the attributes and quality score?\n","\n","Method = Regression Analysis (Logistic)"],"metadata":{"id":"S0kqlQU_G9tA"}},{"cell_type":"markdown","source":["\n","\n","*   Split data 80% Training 20% for red and white wine separately to make sure we have an equal proportion of representation\n","  *   Then combine training data and testing data, respectively, after making a new column flagging which type of wine is which\n","*   Build logistic regression model to classify white wine as 0 or red wine as 1\n","*   Test model with training data and provide accuracy score: # correct predictions/total\n","\n"],"metadata":{"id":"nXQJBZW6HEn_"}},{"cell_type":"code","source":["def SommLog_Avg_Accuracy(white,red,iter=100): #Doing this to get an average accuracy, the train-test-split (tts) function randomizes the data splitting\n","  avg_acc = 0\n","  for i in range(iter):  \n","    sommelier = LogR(max_iter=10000)\n","\n","    wine_type_white = pd.DataFrame({'wine_type':[0]*len(white)})\n","    wine_type_red = pd.DataFrame({'wine_type':[1]*len(red)})\n","\n","    w_x_train, w_x_test, w_y_train, w_y_test = tts(white,wine_type_white,test_size=.8)\n","    r_x_train, r_x_test, r_y_train, r_y_test = tts(red,wine_type_red,test_size=.8)\n","\n","    x_train = pd.concat([w_x_train, r_x_train], axis=0)\n","    x_test = pd.concat([w_x_test, r_x_test], axis=0)\n","    y_train = pd.concat([w_y_train, r_y_train], axis=0)\n","    y_test = pd.concat([w_y_test, r_y_test], axis=0)\n","\n","    sommelier.fit(x_train,y_train[\"wine_type\"])\n","    avg_acc += sommelier.score(x_test,y_test)\n","\n","  coefs = sommelier.coef_[0] #at least a sample of the coefficients of the last model trained\n","\n","  return avg_acc/iter, coefs\n","\n","acc, coefs = SommLog_Avg_Accuracy(white,red,100)\n","print(\"The average model accuracy is\",acc)\n","print()\n","#Using the Logistic Regression coefficients, negative coefficients are indicative of pushing the result closer to 0, a.k.a white wine. Positive coefficients, thus, are indicative of red wine attributes\n","for coef in range(len(coefs)):\n","  if coefs[coef] > 0:\n","    print(white.columns[coef].title(),\"is an attribute that characteristically higher for red wine\")\n","  else:\n","    print(white.columns[coef].title(),\"is an attribute that characteristically higher for white wine\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jCDnV47kRQDk","executionInfo":{"status":"ok","timestamp":1640052770736,"user_tz":300,"elapsed":51724,"user":{"displayName":"Michael Healy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01179065273416505077"}},"outputId":"aaadd43f-31ae-4b56-d4ef-5b52db85520d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The average model accuracy is 0.9787997691863817\n","\n","Fixed Acidity is an attribute that characteristically higher for red wine\n","Volatile Acidity is an attribute that characteristically higher for red wine\n","Citric Acid is an attribute that characteristically higher for white wine\n","Residual Sugar is an attribute that characteristically higher for white wine\n","Chlorides is an attribute that characteristically higher for red wine\n","Free Sulfur Dioxide is an attribute that characteristically higher for red wine\n","Total Sulfur Dioxide is an attribute that characteristically higher for white wine\n","Density is an attribute that characteristically higher for red wine\n","Ph is an attribute that characteristically higher for red wine\n","Sulphates is an attribute that characteristically higher for red wine\n","Alcohol is an attribute that characteristically higher for white wine\n","Quality is an attribute that characteristically higher for red wine\n"]}]}]}